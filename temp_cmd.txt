set http_proxy=http://127.0.0.1:10809
set https_proxy=http://127.0.0.1:10809

set https_proxy=http://username:password@proxydomain:port

$env:all_proxy="socks5://127.0.0.1:10808"

git config --global https.proxy http://127.0.0.1:10809

git config --global https.proxy https://127.0.0.1:10809

git config --global --unset http.proxy

git config --global --unset https.proxy

C:\Users\AA340261\Downloads\Dj_cmdb\cmdb_bby\Scripts\activate.bat
C:\Users\AA340261\Downloads\Dj_cmdb\cmdb_bby\Scripts\deactivate.bat

mysite pwd:admin/123456

pip install django==3.0.7

python manage.py startapp learn


python manage.py makemigrations
python manage.py migrate

python manage.py runserver 0.0.0.0:8001

#https://www.cnblogs.com/kevingrace/p/5690241.html
create .gitignore file:
*.pyc

if want to delete relaete file:
git rm *.pyc --cached

clone to local computer:
git clone https://github.com/CKTim/BlueTooth.git

new repository:
echo "# mysite_test" >> README.md
git init
git add README.md
git commit -m "first commit"

(git remote rm origin)
git remote add origin git@github.com:sshuangliu/mysite_test.git
git remote add origin https://github.com/sshuangliu/mysite_test.git

这个带有-u这个参数是指，将master分支的所有内容都提交，第一次关联之后后边你再提交就可以不用这个参数了，之后你的每一次修改，你就可以只将你修改push就好了。
git push -u origin master



git status
git add .

git client update:
git update-git-for-windows

new ssh-key pair:
path: home/.ssh
$ ssh-keygen -t rsa -C "youremail@example.com"

hahaahhahh

static_file:
https://code.ziqiangxuetang.com/django/django-static-files.html
https://blog.csdn.net/jehon/article/details/80101251
python manage.py collectstatic


token authen：
https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/


https://mp.weixin.qq.com/s?__biz=MjM5OTMyODA4Nw==&mid=2247484591&idx=1&sn=e67179a08b1ad61f92253587595ef0e2&chksm=a73c6497904bed81ff34bed3d8a73bfd37ea1cb14a0b142b8e066f31ae0314868e4319f267b7&scene=21#wechat_redirect

docker run -d -it --name mysite django_mysite:v1
docker exec -it mysite /bin/bash
docker run -it -p 8019:443 --name mysite-nginx \
 -v /mysite_cmdb_demo/mysite/collected_static:/usr/share/nginx/html/static \
 -v /mysite_cmdb_demo/mysite/media:/usr/share/nginx/html/media \
 -v /mysite_cmdb_demo/mysite/compose/nginx/log:/var/log/nginx \
 -v /mysite_cmdb_demo/mysite/compose/nginx/ssl:/usr/share/nginx/ssl \
 -v /mysite_cmdb_demo/mysite/compose/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf \
 -d mynginx:v1


docker build -t django_mysite:v1 .

as59105homenoc
useradd readonlyuser




